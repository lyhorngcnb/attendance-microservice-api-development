# ========================================
# ENHANCED application.properties
# Location: src/main/resources/application.properties
# ========================================

# ========================================
# Server Configuration
# ========================================
server.port=8080
spring.application.name=api-gateway

# ========================================
# Disable Eureka (Service Discovery)
# ========================================
spring.cloud.discovery.enabled=false
eureka.client.enabled=false

# ========================================
# JWT Configuration
# ========================================
jwt.secret=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970
jwt.expiration=86400000
# JWT expiration in milliseconds (86400000 = 24 hours)
jwt.refresh-expiration=604800000
# Refresh token expiration (604800000 = 7 days)

# ========================================
# User Service Configuration
# ========================================
user-service.url=http://localhost:8081
user-service.timeout=500000

# ========================================
# Spring Cloud Gateway - Global Configuration
# ========================================
# Disable default routes (we'll define custom routes)
spring.cloud.gateway.discovery.locator.enabled=false

# ========================================
# CORS Configuration (Enhanced)
# ========================================
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-origin-patterns=http://localhost:3000,http://localhost:*,http://127.0.0.1:*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-methods=GET,POST,PUT,DELETE,OPTIONS,PATCH
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-headers=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].exposed-headers=Authorization,X-User-Name,X-User-Id,X-User-Roles
spring.cloud.gateway.globalcors.cors-configurations.[/**].allow-credentials=true
spring.cloud.gateway.globalcors.cors-configurations.[/**].max-age=3600

# ========================================
# Default Filters (Applied to all routes)
# ========================================
spring.cloud.gateway.default-filters[0]=AddRequestHeader=X-Request-Source,APIGateway
spring.cloud.gateway.default-filters[1]=AddRequestHeader=X-Gateway-Version,1.0.0

# ========================================
# HTTP Client Configuration
# ========================================
spring.cloud.gateway.httpclient.connect-timeout=3000
spring.cloud.gateway.httpclient.response-timeout=10s
spring.cloud.gateway.httpclient.pool.type=ELASTIC
spring.cloud.gateway.httpclient.pool.max-connections=500
spring.cloud.gateway.httpclient.ssl.use-insecure-trust-manager=false

# ========================================
# Management / Actuator
# ========================================
management.endpoints.web.exposure.include=health,info,metrics,gateway,prometheus
management.endpoint.health.show-details=always
management.endpoint.gateway.enabled=true
management.metrics.export.prometheus.enabled=true

# ========================================
# Logging Configuration
# ========================================
logging.level.root=INFO
logging.level.com.rbc.demo.apigateway=DEBUG
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.org.springframework.web=INFO
logging.level.org.springframework.security=DEBUG
logging.level.reactor.netty=INFO

# Log pattern
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# ========================================
# Security Configuration
# ========================================
spring.security.user.name=admin
spring.security.user.password=admin123
# Note: These are only for basic auth fallback, JWT is primary

# ========================================
# Rate Limiting Configuration (Optional)
# ========================================
# Requires Redis - uncomment if using rate limiting
# spring.data.redis.host=localhost
# spring.data.redis.port=6379
# spring.data.redis.password=
# spring.data.redis.timeout=2000ms

# ========================================
# Circuit Breaker Configuration (Optional)
# ========================================
# Requires Resilience4j
# resilience4j.circuitbreaker.instances.user-service.slidingWindowSize=10
# resilience4j.circuitbreaker.instances.user-service.minimumNumberOfCalls=5
# resilience4j.circuitbreaker.instances.user-service.failureRateThreshold=50

# ========================================
# Environment Profiles
# ========================================
spring.profiles.active=dev
spring.main.allow-bean-definition-overriding=true
# ========================================
# Custom Properties for Service Communication
# ========================================
gateway.security.public-endpoints=/api/auth/**,/actuator/**,/h2-console/**
gateway.security.admin-endpoints=/api/admin/**
gateway.security.manager-endpoints=/api/manager/**

# ========================================
# Error Handling
# ========================================
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=on_param
server.error.include-exception=false